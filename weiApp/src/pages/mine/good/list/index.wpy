<template src="./index.wxml">
</template>

<script>
    import wepy from 'wepy'
    import Avatar from '../../../../components/users/avatar/index'
    import Toast from '../../../../components/toast/index'
    import goodApi from '../../../../lib/apis/good'
    import userApi from '../../../../lib/apis/user'
    export default class goodList extends wepy.page {
        data = {
            menus: {},
            current: null,
            items: {},
            pageSize: 5,
            userInfo: null,
            type: "creater",
            imagePath: goodApi.uploadImage,
        }
        methods = {
            onView: function (e) {
                wepy.navigateTo({
                    url: '/pages/post/records/good/index?id=' + e.currentTarget.dataset.id
                })
            },
            onSwitch: function (e) {
                let { index, type } = e.currentTarget.dataset
                this.current = index
                this.$apply()
                this.loadMore({ id: index, [this.type == 'create' ? 'creater' : "partner"]: this.userInfo['uid'] });
            }
        }
        components = {
            avatar: Avatar,
            toast: Toast
        }
        events = {

        }
        /**
         * 获取数据信息
         */
        async loadMore({id,...data}, { refresh = false } = {}) {
            try {
                let { items, pageSize } = this.data;
                if (items.length == 0 || !(id in items)) {
                    return;
                }
                this.$invoke('toast', 'showToast', {
                    title: "获取列表中",
                    icon: "loading",
                    mask: true
                });
                let { page, list } = items[id]
                let { cid } = wepy.getStorageSync('college') || {}
                let { data: { list: goods, pagination: { total = 0 } } } = await goodApi.list({ pageSize, college: cid, type:id,...data, page })
                /**
                 * 先进行数据处理
                 */
                
                for (let good of goods) {
                    good.users = (good.users || "").split(',');
                    good.users = good.users.filter(id => id.trim()).map(id => (userApi.avatar + id + '.ava'))
                    good['images'] = good['images'].split(',')
                }
                if (refresh) {

                    items[id] = {
                        list: goods,
                        page: 1,
                        total,
                        id
                    }
                    this.$emit('loadMoreOk', 'home')
                } else {
                    items[id] = {
                        list: [...goods, ...list],
                        page: ++page,
                        total,
                        id
                    }
                }
                this.items = { ...items };
                this.$invoke('toast', 'hiddenToast')
                this.$apply()
            } catch (e) {
                console.error(e)
                this.$invoke('toast', 'showToast', {
                    title: e.message,
                    icon: 'error',
                    mask: true
                })
            }
        }
        async onLoad({ type } = {}) {
            this.type = type;
            this.userInfo = this.$parent.globalData['userInfo']
            let menus = wepy.getStorageSync("menus");
            if (!menus) {
                menus = await this.fetchMenu();
                wepy.setStorage({
                    key: "menus",
                    data: menus
                })
            }
            let newMenus = {}
            for (let key in menus) {
                if (menus[key]['tid'] == 2) {
                    for (let k in menus[key]['children']) {
                        if (k == 0) {
                            this.current = menus[key]['children'][k]['tid'];
                        }
                        newMenus[menus[key]['children'][k]['tid']] = menus[key]['children'][k];
                        this.items[menus[key]['children'][k]['tid']] = {
                            id: menus[key]['children'][k]['tid'],
                            list: [],
                            page: 1,
                            total: 0
                        }
                    }
                }
            }
            this.menus = newMenus;
            await this.loadMore({
                id: this.current,
                [this.type == 'create' ? 'creater' : "partner"]: this.userInfo['uid']
            });
            this.$apply();
        }
    }
</script>
<style lang="less" src="./index.less"></style>