<template lang="wxml" src="./index.wxml"></template>
<script>
    import wepy from 'wepy'
    import task from '../../components/post/list/task/index'
    import posts from '../../lib/apis/post'
    export default class Home extends wepy.page {
        config = {
            'enablePullDownRefresh': true,
            'backgroundColor': '#F1A468'
        }
        data = {
            college: null,
            current: 0,
            menus: []
        }
        components = {
            task: task,
        }
        events = {
            'loadMoreOk': (componentName, $event) => {
                wepy.stopPullDownRefresh()
            }
        }
        methods = {
            onSwitch: function (e) {
                let { index, type } = e.currentTarget.dataset
                switch (type) {
                    case 'menu': {
                        this.current = index
                        break
                    }
                    case 'sub': {
                        this.menus[this.current]['current'] = index
                        break
                    }
                    default: {
                        return
                    }
                }
                this.$apply()
                this.$broadcast('swiMenus',this.menus[this.current]['tid']);
            }
        }
        async fetchMenu() {
            let { data } = await posts.listType({ type: "tree" })
            return data;
        }
        onReachBottom() {
            /**
            * 与指定的组件通信
            */
            this.$broadcast('loadMore', 'task')
        }
        onShow() {
            this.college = wepy.getStorageSync('college')
            this.$apply()
        }
        async getMenus() {
            let menus = wepy.getStorageSync("menus");
            if (!menus) {
                menus = await this.fetchMenu();
                wepy.setStorage({
                    key: "menus",
                    data: menus
                })
            }
            this.current = menus.length > 0 ? 0:null;
            for(let key in menus){
                menus[key]['current'] = 0;
            }
            this.menus = menus;
            this.$apply();
            this.$broadcast('setMenus')
        }
        async onLoad() {
            this.components = {}
            await this.getMenus();

        }
        onPullDownRefresh() {
            /**
             * 与指定的组件通信
             */
            this.$broadcast('refresh', 'task')
        }
    }
</script>
<style src="./index.less" lang="less"></style>