<template lang="wxml" src="./index.wxml"></template>
<script>
import wepy from 'wepy'
import Toast from '../../../components/toast/index'
import Alert from '../../../components/alert/index'
import { Validate } from '../../../lib/utils/index'
import taskApi from '../../../lib/apis/task'
export default class editorTask extends wepy.page {
  data = {
    id:null,
    startDate: null,
    endDate: null,
    otherReward: [
      '请你吃饭', '你开价'
    ],
    form: {
      rewardType: 0,
      number:1,
      type:0,
      gender:-1
    },
    types:[]
  }
  components = {
    toast: Toast,
    alert: Alert
  } 
  methods = {
    formValueChange: function(e) {
      this.form[e.currentTarget.dataset.name] = e.detail.value
      this.$apply()
    },
    switchType: function(type) {
      // delete this.form.reward
      this.form.rewardType = type
      this.$apply()
    },
    selectTypes:function(e){
       this.form['type'] = e.detail.value;
      this.$apply()
    },
    selectGender: function(value) {
      this.form['gender'] = value
      this.$apply()
    },
    switchReward: function(value) {
      this.form['reward'] = value
      this.$apply()
    },
    addReward: function() {
      this.$invoke('alert', 'showAlert', {
        title: '添加酬劳',
        okText: "编辑完成",
        placeholder: "请输入酬劳方式(最多6个字)",
        onOK: (value) => {
          this.otherReward.push(value)
          this.$apply()
        }
      })
    },
    editor: async function() {
      let params = {...this.form}
      try {
        params['type'] = this.types[this.form['type']]['tid'];
        params = Validate.check(params, [
          ['title', 'require', '请填写标题', Validate.MUST_VALIDATE],
          ['gender', 'require', '请设置性别约束', Validate.MUST_VALIDATE],
          ['dueDate', 'require', '请选择截至日期', Validate.MUST_VALIDATE],
          ['dueTime', 'require', '请选择截至时间', Validate.MUST_VALIDATE],
          ['reward', 'require', '请填写酬劳', Validate.MUST_VALIDATE],
          ['tel', 'tel', '联系电话格式不正确', Validate.MUST_VALIDATE],
          ['contact', 'require', '联系人不能为空', Validate.MUST_VALIDATE],
          ['type','require',"请选择类型",Validate.MUST_VALIDATE]
        ])
        let { cid } = wepy.getStorageSync('college') || {}
        let { pid:id } = this.form;
        params['dueDate'] = params['dueDate'] + ' ' + params['dueTime']
        params['college'] = cid
        delete params['dueTime']
        this.$invoke('toast', 'showToast', {
          title: id?'修改中':"发布中",
          icon: 'loading'
        })
        //设置type
        
        let { data } = await taskApi[id?'update':'add'](params)
        if (data) {
          this.$invoke('toast', 'showToast', {
            title: id?'修改成功':"发布成功",
            icon: 'success'
          });
          if(!id){
              setTimeout(() => {
                  wepy.navigateTo({
                      url: '/pages/post/details/task/index?id='+data
                    })
                }, 3000);
          }else{
            this.$back()
        }
        } else {
          this.$invoke('toast', 'showToast', {
            title: '创建失败',
            icon: 'error'
          })
        }
      } catch (e) {
        this.$invoke('toast', 'showToast', {
          title: e.message,
          icon: 'error'
        })
      }
    }
  }
  async onLoad({id}={}){

    if(id){
      this.id=id;
      await this.loadInfo(id)
      this.$apply();
    }
  }
  async loadInfo(id){
    try {
        this.$invoke('toast', 'showToast', {
          title: "获取信息中",
          icon: "loading",
          mask: true
        })
        let { data } = await taskApi.info({ id })
        let time = data['dueDate'].split(' ');
        data['dueTime'] = time[1]
        data['dueDate'] = time[0]
        data['tel'] =data['contactTel']
        for( let key in this.types){
          if(this.types[key]['tid']==data.tid){
            data['type'] = key;
          }
        }
        this.form = data;
        this.$apply()
        this.$invoke('toast', 'hiddenToast')
      } catch (e) {
        this.$invoke('toast', 'showToast', {
          title: e.message,
          icon: "error",
          mask: true
        })
      }
  }
  onShow() {
    let date = new Date()
    /**
     * 开始时间
     */
    this.startDate = {
      date: date.format('yyyy-MM-dd'),
      time: date.format('hh:mm')
    }
    /**
     * 结束时间
     */
    date.setYear(date.getFullYear() + 1)
    this.endDate = {
      date: date.format('yyyy-MM-dd')
    }
    let menus = wepy.getStorageSync('menus') || [];
    for(let item of menus){
      if(item.tid==1){
        this.types =item['children']
      }
    }
    this.$apply()
  }
}
</script>
<style src="./index.less" lang="less"></style>
